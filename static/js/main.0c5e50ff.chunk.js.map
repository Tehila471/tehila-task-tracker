{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","onTogggle","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c5e50ff.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n    <button onClick={onClick} \r\n    style={{backgroundColor: color}} \r\n    className = 'btn'\r\n    >\r\n        {text} \r\n    </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'purple'\r\n}\r\n\r\nButton.propTypes = {\r\n    text:PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    return (\r\n        <header className = 'header'>\r\n           <h1>{title}</h1> \r\n           <Button  color={showAdd ? 'crimson' : 'rgba(65, 2, 51, 0.829)'} \r\n           text={showAdd ? 'close' : 'Add Task'} \r\n           onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Tehila Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n  }\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div \r\n        className={`task ${task.reminder ?\r\n            'reminder' : '' }`}\r\n         onDoubleClick= {() => onToggle(task.id)}\r\n        >\r\n           <h3>\r\n               {task.text}{' '} \r\n               <FaTimes \r\n                style={{color: 'black', cursor:\r\n                 'pointer'}} \r\n                 onClick={() => onDelete(task.id)}\r\n                 />\r\n                 </h3> \r\n           <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onTogggle }) => {\r\n    return (\r\n        \r\n        <>\r\n           {tasks.map((task) => (\r\n           <Task key={task.id} task={task} \r\n           onDelete={onDelete} onTogggle={onTogggle}/>\r\n           ))} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit} >\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' \r\n                checked={reminder}\r\n                value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import{ useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n        id:1,\n        text:'ZEMA Appointment',\n        day:'March 30th at 09:00am',\n        reminder:true,\n    },\n\n    {\n        id: 2,\n        text:'Collecting Requirements',\n        day:'March 31st at 10:30am',\n        reminder:true,\n    },\n\n    {\n        id:3,\n        text:'ZICTA meeting',\n        day: 'April 1st at 08:00am',\n        reminder:false,\n    },\n])\n\n//Add task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n\n}\n\n//delete task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id  !== id))\n}\n\n//toggle reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? \n  { ...task, reminder: !task.reminder} : task))\n}\n\nreturn (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (\n      <Tasks tasks={tasks} onDelete=\n      {deleteTask} onToggle = {toggleReminder} /> ): ( 'No Tasks To do')}\n    \n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}